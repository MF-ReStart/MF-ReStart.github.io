<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>荒原饮露</title>
  
  <subtitle>青春不是隔岸观火啊</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.missf.top/"/>
  <updated>2020-04-25T05:36:32.361Z</updated>
  <id>https://www.missf.top/</id>
  
  <author>
    <name>荒原饮露</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python基础day03</title>
    <link href="https://www.missf.top/2020/04/24/Python%E5%9F%BA%E7%A1%80day03/"/>
    <id>https://www.missf.top/2020/04/24/Python%E5%9F%BA%E7%A1%80day03/</id>
    <published>2020-04-24T10:14:29.000Z</published>
    <updated>2020-04-25T05:36:32.361Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>十年太长，什么都会变。一辈子太短，一件事也有可能做不完。回忆永远站在背后，你无法抛弃，只能拥抱。</p></blockquote><h1 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 代入验证码项目，输入姓名密码之后有空格也不会报错</span>username <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入姓名:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>passworrd <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入密码:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>code <span class="token operator">=</span> <span class="token string">'AeTrd'</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>your_code <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入验证码:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> your_code <span class="token operator">==</span> code<span class="token punctuation">:</span>    <span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">'alex'</span> <span class="token operator">and</span> passworrd <span class="token operator">==</span> <span class="token string">'sb'</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'登录成功'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户名或者密码错误'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'验证码不正确'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="将一行字符串竖着打印"><a href="#将一行字符串竖着打印" class="headerlink" title="将一行字符串竖着打印"></a>将一行字符串竖着打印</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># while循环</span>t <span class="token operator">=</span> <span class="token string">'荒原饮露cchkskhdiqwuey'</span>s <span class="token operator">=</span> len<span class="token punctuation">(</span>t<span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># 先统计字符串的长度</span><span class="token comment" spellcheck="true"># print(s)</span>index <span class="token operator">=</span> <span class="token number">0</span>       <span class="token comment" spellcheck="true"># 设定一个索引值</span><span class="token keyword">while</span> index <span class="token operator">&lt;</span> s<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 如果索引值小于变量s则进入循环</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 从0开始打印字符串的索引，直到index&lt;s不成立退出循环</span>    index <span class="token operator">+=</span> <span class="token number">1</span>      <span class="token comment" spellcheck="true"># index每次自增1</span><span class="token comment" spellcheck="true"># for循环</span>t <span class="token operator">=</span> <span class="token string">'荒原饮露cchkskhdiqwuey'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> t<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 还可以进行拼接，print(i+'lo')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="猜数字"><a href="#猜数字" class="headerlink" title="猜数字"></a>猜数字</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 猜数字,只有猜对了才会退出</span>num <span class="token operator">=</span> <span class="token number">66</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    cai <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入你要猜的数字:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cai <span class="token operator">></span> num<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"猜的数字大了！"</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> cai <span class="token operator">&lt;</span> num<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"猜的数字小了"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"猜对了！"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token comment" spellcheck="true"># 三次猜测不对就退出</span>num <span class="token operator">=</span> <span class="token number">66</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>    j <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入数字:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> j <span class="token operator">></span> num<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"数字大了!"</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> j <span class="token operator">&lt;</span> num<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"数字小了!"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"猜对了!"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    i <span class="token operator">+=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 方式一</span>content <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入内容:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 将输入的字符串，去掉前后两端的空格</span>plus_index <span class="token operator">=</span> content<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'+'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 找到加号位置，并返回加号的索引数</span>num1 <span class="token operator">=</span> content<span class="token punctuation">[</span><span class="token punctuation">:</span>plus_index<span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 取加号前面的区域并且去掉空格</span>num2 <span class="token operator">=</span> content<span class="token punctuation">[</span>plus_index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>       <span class="token comment" spellcheck="true"># 取加号后面的区域也去掉空格</span>sum3 <span class="token operator">=</span> int<span class="token punctuation">(</span>num1<span class="token punctuation">)</span> <span class="token operator">+</span> int<span class="token punctuation">(</span>num2<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 将取到的无空格值相加</span><span class="token keyword">print</span><span class="token punctuation">(</span>sum3<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方式二</span>content <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入内容:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 将输入的字符串，进行去前后两端的空格</span>li <span class="token operator">=</span> content<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'+'</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 将字符串转换为列表，指定以+进行分割</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>    <span class="token punctuation">[</span><span class="token string">'15  '</span><span class="token punctuation">,</span> <span class="token string">'    16'</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 将得到的元素相加</span>sum1 <span class="token operator">=</span> int<span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> int<span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># 将字符串类型的两个元素强制转换为int，会去掉空格</span><span class="token keyword">print</span><span class="token punctuation">(</span>sum1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="为什么需要列表"><a href="#为什么需要列表" class="headerlink" title="为什么需要列表"></a>为什么需要列表</h2><ul><li>字符串如果长度过于长取值时会很费劲，取出来的数据是字符串类型，使用不方便</li><li>字符串有长度限制(只能存储少量的字符串类型的数据)</li><li>基于以上原因Python提供了一个另外的数据类型:容器类数据类型</li></ul><h2 id="什么是列表"><a href="#什么是列表" class="headerlink" title="什么是列表"></a>什么是列表</h2><ul><li>列表能存储大量的、不同的数据类型，列表存放什么数据类型，取出来之后还是什么数据类型</li><li>列表可以存放的数据类型:数字，字符串，布尔值，小列表，元组，字典，集合，对象</li><li>32位Python的限制是 536870912</li><li>64位Python的限制是 1152921504606846975</li><li>列表是有序的、有索引值的、可切片、方便取值</li></ul><h2 id="列表取值"><a href="#列表取值" class="headerlink" title="列表取值"></a>列表取值</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 取第一个元素</span>sl <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">,</span><span class="token string">'荒原'</span><span class="token punctuation">,</span><span class="token string">'154'</span><span class="token punctuation">]</span>sl1 <span class="token operator">=</span> <span class="token keyword">print</span><span class="token punctuation">(</span>sl<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>type<span class="token punctuation">(</span>sl<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 输出索引和索引类型</span><span class="token keyword">print</span><span class="token punctuation">(</span>sl1<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># alex &lt;class 'list'> 定义列表时是字符串</span>sl <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">,</span><span class="token string">'荒原'</span><span class="token punctuation">,</span><span class="token string">'154'</span><span class="token punctuation">]</span>sl1 <span class="token operator">=</span> <span class="token keyword">print</span><span class="token punctuation">(</span>sl<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 0 1 2，顾首不顾尾，只取前两个元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>sl1<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># ['alex', '荒原']</span><span class="token comment" spellcheck="true"># 反向取值</span>sl <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">,</span><span class="token string">'荒原'</span><span class="token punctuation">,</span><span class="token string">'154'</span><span class="token punctuation">]</span>sl1 <span class="token operator">=</span> <span class="token keyword">print</span><span class="token punctuation">(</span>sl<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sl1<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># ['154', '荒原', 'alex']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表的增加"><a href="#列表的增加" class="headerlink" title="列表的增加"></a>列表的增加</h2><pre class="line-numbers language-python"><code class="language-python">sl<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 增加abc元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>sl<span class="token punctuation">)</span>sl<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 增加布尔值</span><span class="token keyword">print</span><span class="token punctuation">(</span>sl<span class="token punctuation">)</span>name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 空列表</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 如果不执行break,则一直执行while True</span>    username <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入姓名:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 用户输入字符串</span>    <span class="token keyword">if</span> username<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'Q'</span><span class="token punctuation">:</span><span class="token keyword">break</span>        <span class="token comment" spellcheck="true"># 如果输入是q，无论大小写都执行break</span>    name_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>username<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 判断到不是q则增加到列表</span><span class="token keyword">print</span><span class="token punctuation">(</span>name_list<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 插入</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span>lk<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'yu'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 在索引1的位置，插入'yu',索引从零开始 </span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span> <span class="token string">'yu'</span><span class="token punctuation">,</span> <span class="token string">'ctr'</span><span class="token punctuation">,</span> <span class="token string">'tpo'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 迭代者追加</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span>lk<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span> <span class="token string">'ctr'</span><span class="token punctuation">,</span> <span class="token string">'tpo'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span>lk<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'asd'</span><span class="token punctuation">,</span><span class="token string">'cvf'</span><span class="token punctuation">,</span><span class="token string">'cdd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span> <span class="token string">'ctr'</span><span class="token punctuation">,</span> <span class="token string">'tpo'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'asd'</span><span class="token punctuation">,</span> <span class="token string">'cvf'</span><span class="token punctuation">,</span> <span class="token string">'cdd'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表的删除"><a href="#列表的删除" class="headerlink" title="列表的删除"></a>列表的删除</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 按照索引去删除</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span>ret <span class="token operator">=</span> lk<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 删除索引为1的元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span> <span class="token string">'tpo'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 按照元素去删除</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span>lk<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">'tpo'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 指定删除那个</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true"># 清空列表</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span>lk<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># del</span><span class="token number">1</span><span class="token punctuation">.</span>按照索引删除单个元素lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token keyword">del</span> lk<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token number">2</span><span class="token punctuation">.</span>按照切片删除一部分元素lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token keyword">del</span> lk<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'tpo'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token number">3</span><span class="token punctuation">.</span>按照切片（步长）删除一部分元素lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'cff'</span><span class="token punctuation">,</span><span class="token string">'ioo'</span><span class="token punctuation">,</span><span class="token string">'tyy'</span><span class="token punctuation">]</span>s <span class="token operator">=</span> lk<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 取区域为0-5，步长为2</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span> <span class="token string">'tpo'</span><span class="token punctuation">,</span> <span class="token string">'cff'</span><span class="token punctuation">]</span><span class="token keyword">del</span> lk<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 取区域为0-5，步长为2，这些元素全部删除</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'ctr'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'ioo'</span><span class="token punctuation">,</span> <span class="token string">'tyy'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表的修改"><a href="#列表的修改" class="headerlink" title="列表的修改"></a>列表的修改</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 利用索引修改</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'cff'</span><span class="token punctuation">,</span><span class="token string">'ioo'</span><span class="token punctuation">,</span><span class="token string">'tyy'</span><span class="token punctuation">]</span>lk<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'we'</span>        <span class="token comment" spellcheck="true"># 利用索引定义要修改的元素的位置</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 利用切片修改</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'cff'</span><span class="token punctuation">,</span><span class="token string">'ioo'</span><span class="token punctuation">,</span><span class="token string">'tyy'</span><span class="token punctuation">]</span>lk<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'op'</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'o'</span><span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token string">'tpo'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'cff'</span><span class="token punctuation">,</span> <span class="token string">'ioo'</span><span class="token punctuation">,</span> <span class="token string">'tyy'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 利用切片+步长修改</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'cff'</span><span class="token punctuation">,</span><span class="token string">'ioo'</span><span class="token punctuation">,</span><span class="token string">'tyy'</span><span class="token punctuation">]</span>lk<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'op'</span>        <span class="token comment" spellcheck="true"># 注意步长的个数和修改后的字符串个数</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'o'</span><span class="token punctuation">,</span> <span class="token string">'ctr'</span><span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'cff'</span><span class="token punctuation">,</span> <span class="token string">'ioo'</span><span class="token punctuation">,</span> <span class="token string">'tyy'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表的查询"><a href="#列表的查询" class="headerlink" title="列表的查询"></a>列表的查询</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 按照索引查询</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'cff'</span><span class="token punctuation">,</span><span class="token string">'ioo'</span><span class="token punctuation">,</span><span class="token string">'tyy'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 打印一个</span><span class="token comment" spellcheck="true"># for 循环</span><span class="token keyword">for</span> i <span class="token keyword">in</span> lk<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 输出列表所有元素</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表的其他操作"><a href="#列表的其他操作" class="headerlink" title="列表的其他操作"></a>列表的其他操作</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 计算列表元素的总个数</span>lk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mjk'</span><span class="token punctuation">,</span><span class="token string">'ctr'</span><span class="token punctuation">,</span><span class="token string">'tpo'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'cff'</span><span class="token punctuation">,</span><span class="token string">'ioo'</span><span class="token punctuation">,</span><span class="token string">'tyy'</span><span class="token punctuation">,</span><span class="token string">'cff'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>lk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">8</span><span class="token comment" spellcheck="true"># 计算某个元素出现的个数</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'cff'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">2</span><span class="token comment" spellcheck="true"># 通过元素找索引，找到第一个返回，找不到就报错</span><span class="token keyword">print</span><span class="token punctuation">(</span>lk<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'ctr'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token comment" spellcheck="true"># 从小到大排列</span>fg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span>fg<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fg<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 从大到小排列</span>fg<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fg<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 列表翻转</span>fg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span>fg<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fg<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 英文字符排序，按照元素首字母的ASCLL码的大小排序</span>fg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'dfg'</span><span class="token punctuation">,</span><span class="token string">'arfd'</span><span class="token punctuation">,</span><span class="token string">'wer'</span><span class="token punctuation">,</span><span class="token string">'fgv'</span><span class="token punctuation">]</span>fg<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fg<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'arfd'</span><span class="token punctuation">,</span> <span class="token string">'dfg'</span><span class="token punctuation">,</span> <span class="token string">'fgv'</span><span class="token punctuation">,</span> <span class="token string">'wer'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列表的嵌套"><a href="#列表的嵌套" class="headerlink" title="列表的嵌套"></a>列表的嵌套</h2><pre class="line-numbers language-python"><code class="language-python">ll <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'taibai'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'alex'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 列表里面有嵌套的小列表</span><span class="token comment" spellcheck="true"># 将taibai改成大写</span>ll<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> ll<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ll<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 往小列表追加元素'老男孩教育'</span>ll<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> ll<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'老男孩教育'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ll<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 将alex改成alexsb</span>ll<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> ll<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'sb'</span><span class="token keyword">print</span><span class="token punctuation">(</span>ll<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 打印嵌套列表元素</span>lj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'wedi'</span><span class="token punctuation">,</span><span class="token string">'lko'</span><span class="token punctuation">,</span><span class="token string">'cjd'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'dkd'</span><span class="token punctuation">,</span><span class="token string">'oto'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'top'</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> lj<span class="token punctuation">:</span>    <span class="token keyword">if</span> type<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> list<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 加个判断如果某个元素类型为list，则再循环一遍，打印出来</span>        <span class="token keyword">for</span> o <span class="token keyword">in</span> i<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 否则正常打印</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h1><p>用来存放一些重要的信息，放在列表中不安全，需要一个容器类的数据类型，比如：个人信息，密码等。元组不能修改，但是元组里面的列表可以修改。</p><pre class="line-numbers language-python"><code class="language-python">tu <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'alex'</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 定义一个元组</span>tu<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'12'</span>    <span class="token comment" spellcheck="true"># 往列表里面追加元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>tu<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'alex'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'12'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 存放一些重要数据时，需要用元组存放</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h1><p>列表如果存储大量的数据，查询速度相对较慢，因为列表存储的数据一般没有什么关联性。针对这个问题，Python提供了一个基础数据类型：字典(dict)</p><h2 id="回顾数据类型"><a href="#回顾数据类型" class="headerlink" title="回顾数据类型"></a>回顾数据类型</h2><table><thead><tr><th>分类</th><th>数据类型</th></tr></thead><tbody><tr><td>容器型数据类型</td><td>list，tuple，dict，set</td></tr><tr><td>非容器型数据类型</td><td>str，bool，int</td></tr><tr><td>可变数据类型（不可哈希）</td><td>list，dict，set</td></tr><tr><td>不可变数据类型（可哈希）</td><td>str，bool，int，tuple</td></tr></tbody></table><p>字典是由键值对形式存储的数据类型，字典的键必须是不可变的数据类型，唯一不重复的，字典的值可以是任意数据类型或者对象。基于字典的键是不可变的，字典的键会通过一种哈希算法，将键的值换算成内存地址，所以字典的查询速度非常快。字典在Python3.6之前是无序的，在3.6及以后字典会按照字典创建时的顺序排列。字典可以存储大量关联性数据。</p><h2 id="字典的增加"><a href="#字典的增加" class="headerlink" title="字典的增加"></a>字典的增加</h2><pre class="line-numbers language-python"><code class="language-python">dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span>     <span class="token comment" spellcheck="true"># 用字典定义三个键值对</span>dic<span class="token punctuation">[</span><span class="token string">'dfgh'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">150</span>   <span class="token comment" spellcheck="true"># 没有则添加这个键值对</span>dic<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">28</span>     <span class="token comment" spellcheck="true"># 有age这个键就将值覆盖为28</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'barry'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'man'</span><span class="token punctuation">,</span> <span class="token string">'dfgh'</span><span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">}</span>dic<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">'port'</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># 没有这个键值对就会添加并赋值为空</span>dic<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'yiyi'</span><span class="token punctuation">)</span>       <span class="token comment" spellcheck="true"># 有name这个值则不修改，没有则增加</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'barry'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'man'</span><span class="token punctuation">,</span> <span class="token string">'port'</span><span class="token punctuation">:</span> None<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字典的删除"><a href="#字典的删除" class="headerlink" title="字典的删除"></a>字典的删除</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># pop 通过键去删除键值对</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span>ret <span class="token operator">=</span> dic<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'sex'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'barry'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 删除一个不存在的键就会报错</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span>        ret1 <span class="token operator">=</span> dic<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'name2'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为了程序能执行下去，想要不报错的话，可以添加一个返回值</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span>ty <span class="token operator">=</span> dic<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'re'</span><span class="token punctuation">,</span><span class="token string">'没有此键'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ty<span class="token punctuation">)</span>没有此键<span class="token comment" spellcheck="true"># clear 清空</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span>dic<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># popitem 删除最后一个键值对，3.5之前是随机删除，3.6删除最后一个键值对</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span>lo <span class="token operator">=</span> dic<span class="token punctuation">.</span>popitem<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'barry'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 删除整个字典</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span><span class="token keyword">del</span> dic<span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字典的修改"><a href="#字典的修改" class="headerlink" title="字典的修改"></a>字典的修改</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 改</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span>dic<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">28</span>        <span class="token comment" spellcheck="true">#重新定义age键的值</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># update 更新</span>dic1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span>dic2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'nji'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token string">'18'</span><span class="token punctuation">,</span><span class="token string">'id'</span><span class="token punctuation">:</span><span class="token string">'001'</span><span class="token punctuation">}</span>dic2<span class="token punctuation">.</span>update<span class="token punctuation">(</span>dic1<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#将dic1字典中的键值对覆盖添加到dic2，dic1不变</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic2<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'barry'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'001'</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'man'</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># update 正常添加</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span>dic<span class="token punctuation">.</span>update<span class="token punctuation">(</span>weight<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span>high<span class="token operator">=</span><span class="token number">175</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#一次添加多个键值对</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'barry'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> <span class="token string">'man'</span><span class="token punctuation">,</span> <span class="token string">'weight'</span><span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token string">'high'</span><span class="token punctuation">:</span> <span class="token number">175</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字典的查询"><a href="#字典的查询" class="headerlink" title="字典的查询"></a>字典的查询</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 查</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 按键查对应的值，没有此键会报错</span>barrytr <span class="token operator">=</span> dic<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'age1'</span><span class="token punctuation">,</span><span class="token string">'没有此键'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 定义没有此键时的返回值</span><span class="token keyword">print</span><span class="token punctuation">(</span>tr<span class="token punctuation">)</span>没有此键<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字典的其他操作"><a href="#字典的其他操作" class="headerlink" title="字典的其他操作"></a>字典的其他操作</h2><pre class="line-numbers language-python"><code class="language-python">dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>dict_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'barry'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'man'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>dict_items<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'barry'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'sex'</span><span class="token punctuation">,</span> <span class="token string">'man'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># for循环得到的是keys值</span><span class="token keyword">for</span> i <span class="token keyword">in</span> dic<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>nameagesex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字典的嵌套联系"><a href="#字典的嵌套联系" class="headerlink" title="字典的嵌套联系"></a>字典的嵌套联系</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 字典的嵌套练习</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'l1'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">,</span> <span class="token string">'太白'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'id'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span>    <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">{</span>        <span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token number">20181225</span><span class="token punctuation">,</span>        <span class="token string">'place'</span><span class="token punctuation">:</span> <span class="token string">'深圳校区'</span><span class="token punctuation">,</span>        <span class="token string">'class'</span><span class="token punctuation">:</span> <span class="token string">'python3期'</span><span class="token punctuation">,</span>        <span class="token string">'name_list'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'awq'</span><span class="token punctuation">,</span> <span class="token string">'xx'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 1.给小列表['alex', '太白'] alex后面插入一个字符串，'aaa'</span>dic<span class="token punctuation">[</span><span class="token string">'l1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'aaa'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 2.将id对应的3变成1</span>dic<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true"># 3.将1对应的字典的data的值变成20181224</span>dic<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">20181224</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 4.将name_list对应的awq全部变成大写</span>dic<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name_list'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dic<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name_list'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>swapcase<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 5.将name_list对应的xx删除</span>dic<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name_list'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将字典数据格式化输出"><a href="#将字典数据格式化输出" class="headerlink" title="将字典数据格式化输出"></a>将字典数据格式化输出</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 格式化输出</span>msg <span class="token operator">=</span> <span class="token string">'我叫%s,我身高%s，年龄%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token string">'ed'</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 将字典数据格式化输出</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'barry'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'男'</span><span class="token punctuation">}</span>mk <span class="token operator">=</span> <span class="token string">'我叫%(name)s,今年%(age)s,性别%(sex)s'</span> <span class="token operator">%</span> dic<span class="token keyword">print</span><span class="token punctuation">(</span>mk<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="返回一个新的字典"><a href="#返回一个新的字典" class="headerlink" title="返回一个新的字典"></a>返回一个新的字典</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 返回一个新的字典，键从可迭代对象里面获取，值不变</span>dic1 <span class="token operator">=</span> dict<span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span><span class="token string">'top'</span><span class="token punctuation">,</span><span class="token string">'ed'</span><span class="token punctuation">)</span>dic2 <span class="token operator">=</span> dict<span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'lop'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'努力'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic1<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">'t'</span><span class="token punctuation">:</span> <span class="token string">'ed'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">:</span> <span class="token string">'ed'</span><span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">:</span> <span class="token string">'ed'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic2<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token string">'lop'</span><span class="token punctuation">:</span> <span class="token string">'努力'</span><span class="token punctuation">}</span>dicu <span class="token operator">=</span> dict<span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dicu<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 坑:值如果是一个可变的数据类型，那么所有的值都是一个内存地址</span>dicu<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">000</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dicu<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 给dicu[1]这个列表赋值000，所有列表的值都是000，因为列表所有的值都指向一个内存地址</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据类型的补充"><a href="#数据类型的补充" class="headerlink" title="数据类型的补充"></a>数据类型的补充</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 数据类型的补充</span>str <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> list splitlist <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> str join<span class="token number">0</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>set<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> bool<span class="token punctuation">:</span>false<span class="token comment" spellcheck="true"># 列表和元组的互换</span><span class="token comment" spellcheck="true"># list &lt;---> tuple</span>jk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>yu <span class="token operator">=</span> tuple<span class="token punctuation">(</span>jk<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>yu<span class="token punctuation">)</span>uy <span class="token operator">=</span> list<span class="token punctuation">(</span>yu<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>uy<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># dict ---> list</span>dico <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'kasha'</span><span class="token punctuation">,</span><span class="token string">'ui'</span><span class="token punctuation">:</span><span class="token string">'io'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>list<span class="token punctuation">(</span>dico<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'ui'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># dict ---> tuple</span>dich <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'yu'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>tuple<span class="token punctuation">(</span>dich<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 元组中只有一个元素并且没有逗号，则它不是元组，它与元素数据类型相同</span>t1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span>t2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'al'</span><span class="token punctuation">,</span><span class="token punctuation">)</span>t3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span>t2<span class="token punctuation">,</span>t3<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token string">'al'</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span>t1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>t2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'al'</span><span class="token punctuation">)</span>t3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span>t2<span class="token punctuation">,</span>t3<span class="token punctuation">)</span><span class="token number">1</span> al <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将索引为奇数位的元素删除"><a href="#将索引为奇数位的元素删除" class="headerlink" title="将索引为奇数位的元素删除"></a>将索引为奇数位的元素删除</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 将索引为奇数位的元素删除,列表是不等长的</span><span class="token comment" spellcheck="true"># 方法一</span>li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">]</span><span class="token keyword">del</span> li<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 1-所有，步长为2</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方法二</span>li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">]</span>new_li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>     <span class="token comment" spellcheck="true"># 定义一个空列表</span><span class="token keyword">for</span> index <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true"># 循环</span>    <span class="token keyword">if</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>       <span class="token comment" spellcheck="true"># 如果能被2整除</span>        new_li<span class="token punctuation">.</span>append<span class="token punctuation">(</span>li<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 如果能整除，就加入到new_li列表里面，这样索引是奇数位的元素就被删除了</span>li <span class="token operator">=</span> new_li<span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方法三</span>li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">]</span><span class="token keyword">for</span> index <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        li<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将字典中键含有k元素的键值对删除"><a href="#将字典中键含有k元素的键值对删除" class="headerlink" title="将字典中键含有k元素的键值对删除"></a>将字典中键含有k元素的键值对删除</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 将字典中键含有k元素的键值对删除</span>dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'ko'</span><span class="token punctuation">:</span><span class="token string">'ty'</span><span class="token punctuation">,</span><span class="token string">'df'</span><span class="token punctuation">:</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token string">'13k'</span><span class="token punctuation">:</span><span class="token string">'hu'</span><span class="token punctuation">,</span><span class="token string">'jl'</span><span class="token punctuation">:</span><span class="token string">'lp'</span><span class="token punctuation">}</span>     <span class="token comment" spellcheck="true"># 循环列表时不能改变字典的大小</span>lo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>     <span class="token comment" spellcheck="true"># 定义一个空的列表</span><span class="token keyword">for</span> i <span class="token keyword">in</span> dict<span class="token punctuation">:</span>      <span class="token comment" spellcheck="true"># 将字典循环给i，赋值时是只将key赋值</span>    <span class="token keyword">if</span> <span class="token string">'k'</span> <span class="token keyword">in</span> i<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 如果k存在于i中</span>       lo<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 则把这些有k元素的键值对添加到lo这个空字典</span><span class="token keyword">for</span> y <span class="token keyword">in</span> lo<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 将lo字典循环给y</span>    dict<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>y<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 通过键去删除键值对</span><span class="token keyword">print</span><span class="token punctuation">(</span>dict<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="enumerate"><a href="#enumerate" class="headerlink" title="enumerate()"></a>enumerate()</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中</span>s1 <span class="token operator">=</span> <span class="token string">"Hello"</span><span class="token keyword">for</span> i<span class="token punctuation">,</span>y <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>start<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token number">1</span> H<span class="token number">2</span> e<span class="token number">3</span> l<span class="token number">4</span> l<span class="token number">5</span> os2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"top"</span><span class="token punctuation">,</span><span class="token string">"jun"</span><span class="token punctuation">,</span><span class="token string">"mid"</span><span class="token punctuation">,</span><span class="token string">"adc"</span><span class="token punctuation">,</span><span class="token string">"sup"</span><span class="token punctuation">]</span><span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>s2<span class="token punctuation">,</span>start<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token number">1</span> top<span class="token number">2</span> jun<span class="token number">3</span> mid<span class="token number">4</span> adc<span class="token number">5</span> su<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;十年太长，什么都会变。一辈子太短，一件事也有可能做不完。回忆永远站在背后，你无法抛弃，只能拥抱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;验证码&quot;&gt;&lt;a href=&quot;#验证码&quot; class=&quot;headerlink&quot; title=&quot;验证码
      
    
    </summary>
    
    
      <category term="Python" scheme="https://www.missf.top/categories/Python/"/>
    
    
      <category term="Python基础" scheme="https://www.missf.top/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Python基础day02</title>
    <link href="https://www.missf.top/2020/04/24/Python%E5%9F%BA%E7%A1%80day02/"/>
    <id>https://www.missf.top/2020/04/24/Python%E5%9F%BA%E7%A1%80day02/</id>
    <published>2020-04-24T04:14:29.000Z</published>
    <updated>2020-04-24T13:04:24.896Z</updated>
    
    <content type="html"><![CDATA[<h1 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 格式化输出</span>name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入姓名："</span><span class="token punctuation">)</span>age <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入年龄："</span><span class="token punctuation">)</span>job <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入职业："</span><span class="token punctuation">)</span>hobby <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入爱好"</span><span class="token punctuation">)</span>msg <span class="token operator">=</span> <span class="token triple-quoted-string string">"""------ info of %s ------Name    : %sAge     : %sjob     : %sHobbie  : %s------ end ------"""</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>job<span class="token punctuation">,</span>hobby<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 坑:单个%号默认被当成一个占位符，如果想单纯的表示%号，请使用%%</span>msg <span class="token operator">=</span> <span class="token string">'我叫%s,今年%s岁,python入门1%%.'</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token string">'荒原饮露'</span><span class="token punctuation">,</span><span class="token string">'23'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>=</td><td>简单的赋值运算符</td><td>c = a + b 将 a + b 的运算结果赋值给c</td></tr><tr><td>+=</td><td>加法赋值运算符</td><td>c += a 等效于 c = c + a</td></tr><tr><td>-=</td><td>减法赋值运算符</td><td>c -= a 等效于 c = c - a</td></tr><tr><td>*=</td><td>乘法赋值运算符</td><td>c *= a 等效于 c = c * a</td></tr><tr><td>/=</td><td>除法赋值运算符</td><td>c /= a 等效于 c = c / a</td></tr><tr><td>%=</td><td>取模赋值运算符</td><td>c %= a 等效于 c = c % a</td></tr><tr><td>**=</td><td>幂赋值运算符</td><td>c *<em>= a 等效于 c = c *</em> a</td></tr><tr><td>//=</td><td>取整赋值运算符</td><td>c //= a 等效于 c = c // a</td></tr><tr><td>and</td><td>“与”，如果 x 为False，x and y 返回False，否则返回y的计算值</td><td>两边为True才为True</td></tr><tr><td>or</td><td>“或”， 如果 x 为True，返回True，否则它返回y的计算值</td><td>一边为True则为True</td></tr><tr><td>not</td><td>“非”， 如果 x 为True，返回False，如果 x 为False，返回True</td><td>True则False，反之</td></tr></tbody></table><h1 id="逻辑运算符的优先级"><a href="#逻辑运算符的优先级" class="headerlink" title="逻辑运算符的优先级"></a>逻辑运算符的优先级</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">not</span> <span class="token operator">></span> <span class="token operator">and</span> <span class="token operator">></span> <span class="token operator">or</span><span class="token operator">and</span>     两个条件必须同时成立才为<span class="token boolean">True</span><span class="token operator">or</span>         两个条件有一个成立则为<span class="token boolean">True</span><span class="token operator">not</span>     条件为<span class="token boolean">True</span>则结果为<span class="token boolean">False</span>，条件为<span class="token boolean">False</span>则结果为<span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运算符的不等式计算"><a href="#运算符的不等式计算" class="headerlink" title="运算符的不等式计算"></a>运算符的不等式计算</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token number">3</span> <span class="token operator">></span> <span class="token number">4</span><span class="token punctuation">)</span>两边式子同时成立，才会为<span class="token boolean">True</span>，否则为<span class="token boolean">False</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token number">3</span> <span class="token operator">></span> <span class="token number">4</span> <span class="token operator">or</span> <span class="token number">4</span> <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">and</span> <span class="token number">6</span> <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span>先计算<span class="token operator">and</span>，式子为<span class="token boolean">False</span> <span class="token operator">or</span> <span class="token boolean">True</span>，结果则为<span class="token boolean">True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token operator">and</span> <span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">or</span> <span class="token number">4</span> <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">and</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">or</span> <span class="token number">9</span> <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span>先计算<span class="token operator">and</span>，式子为<span class="token boolean">False</span> <span class="token operator">or</span> <span class="token boolean">False</span> <span class="token operator">or</span> <span class="token boolean">False</span>，结果为<span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运算符数字计算"><a href="#运算符数字计算" class="headerlink" title="运算符数字计算"></a>运算符数字计算</h2><pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">or</span> y     <span class="token comment" spellcheck="true"># if x is True，return x else return y.如果x为True则返回X，否则返回y</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">or</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">or</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token number">3</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">or</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token number">2</span><span class="token comment" spellcheck="true"># x and y和x or y是相反的</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">and</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token number">0</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span> <span class="token operator">and</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token number">2</span> <span class="token operator">or</span> <span class="token number">3</span> <span class="token operator">and</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">or</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="编码初识"><a href="#编码初识" class="headerlink" title="编码初识"></a>编码初识</h1><p>ASCII</p><pre class="line-numbers language-python"><code class="language-python">ASCII<span class="token punctuation">:</span>早期的密码本，只包含英文字母，数字，特殊字符与<span class="token number">01</span>的对应关系采用 <span class="token number">8</span>位比特（bit） <span class="token operator">==</span> 1byte（字节）在ascll编码中 <span class="token number">8</span>位比特表示一个字节表示一个字符h e l l o  <span class="token operator">=</span>  <span class="token number">01101000</span> <span class="token number">01100101</span> <span class="token number">01100111</span> <span class="token number">0110011</span> <span class="token number">01100101</span>缺点<span class="token punctuation">:</span>只为英文使用者考虑，不能处理中文和其他国家的文字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>GBK</p><pre class="line-numbers language-python"><code class="language-python">由于ASCII编码，于是每个国家都提出了不同的编码来适应自己的语言GBK 只包含本国文字（以及英文字母，数字，特殊字符）与<span class="token number">01</span>对应关系GBK是采用单双字节变长编码，英文使用单字节编码，完全兼容ASCII字符编码，中文部分采用双字节编码a 太 白 <span class="token operator">=</span> <span class="token number">01101000</span> <span class="token number">01100101</span> <span class="token number">01100111</span> <span class="token number">0110011</span> <span class="token number">01100101</span>    <span class="token comment" spellcheck="true"># 1个英文占1个字节，1个中文字符占2个字节，共5字节</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>UNICODE</p><pre class="line-numbers language-python"><code class="language-python">由于ASCII编码的局限性，unicode应运而生unicode<span class="token punctuation">:</span>万国码，将全世界所有的文字都统一到一套编码里面采用<span class="token number">32</span>位比特<span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token operator">==</span> 4byte在unicode编码中 <span class="token number">32</span>位比特表示<span class="token number">4</span>个字节表示一个字符a：<span class="token number">00000000</span> <span class="token number">00010010</span> <span class="token number">00000000</span> <span class="token number">00010010</span>中：<span class="token number">00000000</span> <span class="token number">10010010</span> <span class="token number">00000000</span> <span class="token number">10010010</span>缺点<span class="token punctuation">:</span>如果使用unicode编码来存储英文，这会大量浪费空间，因为我们知道一个英文字符只占一个字节，而另外三个字节就浪费掉了，这样在存储和传输上非常不划算<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UTF-8</p><pre class="line-numbers language-python"><code class="language-python">utf<span class="token number">-8</span><span class="token punctuation">:</span>包含全世界所有的文字与二进制<span class="token number">01</span>的对应关系<span class="token punctuation">,</span>最少用<span class="token number">8</span>位表示一个字符utf<span class="token number">-8</span>是一种针对Unicode的可变长度字符编码<span class="token punctuation">,</span>是对Unicode编码的压缩和优化，将所有的字符和符号进行分类英文<span class="token punctuation">:</span> <span class="token number">00000010</span> <span class="token number">8</span>位表示一个字节表示一个字符欧洲文字<span class="token punctuation">:</span> <span class="token number">00000010</span> <span class="token number">00100000</span>    <span class="token number">16</span>位表示两个字节表示一个字符中国<span class="token punctuation">(</span>亚洲<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token number">00000010</span> <span class="token number">00000010</span> <span class="token number">00000010</span> <span class="token number">24</span>位表示三个字节表示一个字符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例子</p><pre class="line-numbers language-python"><code class="language-python"><span class="token string">'old男孩'</span>GBK<span class="token punctuation">:</span><span class="token number">7</span>个字节utf<span class="token number">-8</span><span class="token punctuation">:</span><span class="token number">9</span>个字节<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="十进制转换为二进制"><a href="#十进制转换为二进制" class="headerlink" title="十进制转换为二进制"></a>十进制转换为二进制</h1><p>关键要点:除二取余，倒序排列，高位补零。</p><p>将十进制数42不断除以2，得到的余数非别是:010101，然后倒序排列，42所对应的二进制就是101010，然后高位补零就是:00101010</p><p>负整数转换为二进制，以-42为例，先得到42的二进制，然后取反(0变1，1变0)再加一，就是11010101 + 1，结果为11010110</p><h1 id="二进制转换成十进制"><a href="#二进制转换成十进制" class="headerlink" title="二进制转换成十进制"></a>二进制转换成十进制</h1><table><thead><tr><th>1</th><th>0</th><th>0</th><th>1</th><th>0</th><th>1</th><th>1</th><th>0</th></tr></thead><tbody><tr><td>1 * 2^7</td><td>0 * 2^6</td><td>0 * 2^5</td><td>1 * 2^4</td><td>0 * 2^3</td><td>1 * 2^2</td><td>1 * 2^1</td><td>0 * 2^0</td></tr></tbody></table><p>将这些数相加，得到的就是10010110这个二进制数的十进制数</p><p>128 + 0 + 0 + 16 + 0 + 4 + 2 + 0 = 150</p><h1 id="数据类型之间的转换"><a href="#数据类型之间的转换" class="headerlink" title="数据类型之间的转换"></a>数据类型之间的转换</h1><pre class="line-numbers language-python"><code class="language-python">int（整数）         <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> bool（布尔值）非零即<span class="token boolean">True</span>bool（布尔值）     <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> int（整数）<span class="token boolean">True</span> <span class="token number">1</span> <span class="token boolean">False</span> <span class="token number">0</span>str（字符串）     <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> bool（布尔值）非空即<span class="token boolean">True</span>str（字符串）    <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> int（整数）str（<span class="token number">13</span>   ）转换为整数，会强制去掉空格变成int（<span class="token number">13</span>）bool（布尔值）     <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span> str（字符串）还是<span class="token boolean">True</span>，但是str类型的<span class="token boolean">True</span>，失去<span class="token boolean">True</span>的意义y <span class="token operator">=</span> <span class="token boolean">True</span>u <span class="token operator">=</span> str<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span>type<span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token boolean">True</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'str'</span><span class="token operator">></span>    <span class="token comment" spellcheck="true"># 由于是str数据类型的True，下面的3 + u会报错，如果是bool数据类型的True可以与数字相加</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="字符串的切片"><a href="#字符串的切片" class="headerlink" title="字符串的切片"></a>字符串的切片</h1><h2 id="字符串索引示意图"><a href="#字符串索引示意图" class="headerlink" title="字符串索引示意图"></a>字符串索引示意图</h2><p>请记住切片原则:<code>顾首不顾尾</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://pic.imgdb.cn/item/5ea14b57c2a9a83be5caa515.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="按照索引取值"><a href="#按照索引取值" class="headerlink" title="按照索引取值"></a>按照索引取值</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'python骑士计划第三期'</span>        s1 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>s2 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># p</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 期</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="按照切片取值"><a href="#按照切片取值" class="headerlink" title="按照切片取值"></a>按照切片取值</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'python骑士计划第三期'</span>        <span class="token comment" spellcheck="true"># 照切片取值，顾首不顾尾，s5 = s[6:-3] 6就是第六个字符以后，-3就是倒数第三个字符以前</span>s3 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 是从零开始数。取整个字符串可以写成s3 = s[:6],取整个字符串是s3 = s[:]</span><span class="token keyword">print</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># python</span>s4 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 相当于s[0:6]，0可以不写，默认从零开始</span><span class="token keyword">print</span><span class="token punctuation">(</span>s4<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># python</span>s5 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>s5<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 骑士计划</span>s6 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>s6<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 骑士计划</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="切片加步长取值"><a href="#切片加步长取值" class="headerlink" title="切片加步长取值"></a>切片加步长取值</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 步长就是每一步的长度，取pto字符串，要先划分区域，再定义隔几个字符去取</span>s <span class="token operator">=</span> <span class="token string">'python骑士计划第三期'</span>s7 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 划分区域为 0-6（区域为:python，从首个字符串开始取），步长为2</span><span class="token keyword">print</span><span class="token punctuation">(</span>s7<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># pto</span>s8 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 划分区域为 7-最后（区域为:士计划第三期，从第七个字符之后开始取），步长为2</span><span class="token keyword">print</span><span class="token punctuation">(</span>s8<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 士划三</span>s9 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 倒叙取值要加上反向步长</span><span class="token keyword">print</span><span class="token punctuation">(</span>s9<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 期三第</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 后面是-1所以是反向取值，区域定义为 0-5（python），但是区域也是反向的，所以是从期到n的区域里面取</span>骑士计划第三期<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="字符串的常用操作"><a href="#字符串的常用操作" class="headerlink" title="字符串的常用操作"></a>字符串的常用操作</h1><h2 id="capitalize-首字母大写"><a href="#capitalize-首字母大写" class="headerlink" title="capitalize() 首字母大写"></a>capitalize() 首字母大写</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'faker'</span>s1 <span class="token operator">=</span> s<span class="token punctuation">.</span>capitalize<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># faker</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># Faker</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="center-将字符串居中"><a href="#center-将字符串居中" class="headerlink" title="center() 将字符串居中"></a>center() 将字符串居中</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'missf.top'</span>s1 <span class="token operator">=</span> s<span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>                    missf<span class="token punctuation">.</span>top                         <span class="token comment" spellcheck="true"># 设置50的长度并把字符串居中</span>s2 <span class="token operator">=</span> s<span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span>missf<span class="token punctuation">.</span>top<span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">*</span>    <span class="token comment" spellcheck="true"># 设置50的长度定义填充物并把字符串居中</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="swapcase-大小写翻转"><a href="#swapcase-大小写翻转" class="headerlink" title="swapcase() 大小写翻转"></a>swapcase() 大小写翻转</h2><pre class="line-numbers language-python"><code class="language-python">sr <span class="token operator">=</span> <span class="token string">'KubeRnEteS'</span><span class="token keyword">print</span><span class="token punctuation">(</span>sr<span class="token punctuation">.</span>swapcase<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>kUBErNeTEs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="title-非字母隔开单词的首字母大写"><a href="#title-非字母隔开单词的首字母大写" class="headerlink" title="title() 非字母隔开单词的首字母大写"></a>title() 非字母隔开单词的首字母大写</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'tpshow9nohup@mid'</span>        <span class="token comment" spellcheck="true"># 注意：第一个字母也会变成大写</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>Tpshow9Nohup@Mid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="upper-不区分大小写"><a href="#upper-不区分大小写" class="headerlink" title="upper() 不区分大小写"></a>upper() 不区分大小写</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 用途:验证码不区分大小写</span>username <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入姓名:"</span><span class="token punctuation">)</span>passworrd <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入密码:"</span><span class="token punctuation">)</span>code <span class="token operator">=</span> <span class="token string">'AeTrd'</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>your_code <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入验证码:"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> your_code <span class="token operator">==</span> code<span class="token punctuation">:</span>    <span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">'alex'</span> <span class="token operator">and</span> passworrd <span class="token operator">==</span> <span class="token string">'sb'</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'登录成功'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户名或者密码错误'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'验证码不正确'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="startswich-endswith-判断以什么为开头和结尾"><a href="#startswich-endswith-判断以什么为开头和结尾" class="headerlink" title="startswich() endswith() 判断以什么为开头和结尾"></a>startswich() endswith() 判断以什么为开头和结尾</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'mowenjieadcarry'</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'o'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token boolean">False</span>    <span class="token comment" spellcheck="true"># 字符串不是以o开头，结果为False</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'mo'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token boolean">True</span>    <span class="token comment" spellcheck="true"># 字符串以mo开头，结果为True</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'j'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 切割五个字符之后是否是j开头，结果为True</span><span class="token boolean">True</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'ry'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 判断以什么为结尾</span><span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="find-index-通过元素找索引"><a href="#find-index-通过元素找索引" class="headerlink" title="find() index() 通过元素找索引"></a>find() index() 通过元素找索引</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'mowenjieadcarry'</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">8</span>    <span class="token comment" spellcheck="true"># 返回a元素前面的索引数</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">11</span>    <span class="token comment" spellcheck="true"># 从第九个字符后面开始找，找到的是第二个a</span><span class="token comment" spellcheck="true"># find和index功能几乎一样，区别只有find找不到会返回-1,index会报错</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="strip-默认去除字符串前后的空格-换行符-制表符"><a href="#strip-默认去除字符串前后的空格-换行符-制表符" class="headerlink" title="strip() 默认去除字符串前后的空格/换行符/制表符"></a>strip() 默认去除字符串前后的空格/换行符/制表符</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># strip()    默认去除字符串前后两端的空格，换行符，制表符</span>s <span class="token operator">=</span> <span class="token string">'\n barry \t \n'</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># barry</span><span class="token comment" spellcheck="true"># strip 去除字符串两边的字符</span>s <span class="token operator">=</span> <span class="token string">'kkohuang yuan yin lure'</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'kore'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 会把kore切割成最小单位，从前后两边逐个去除</span>huang yuan yin lu<span class="token comment" spellcheck="true"># lstrip 只从前面去除</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">'k'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ohuang yuan yin lure<span class="token comment" spellcheck="true"># rstrip() 只从后面去除</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">'re'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>kkohuang yuan yin lu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="split-将字符串转化为列表"><a href="#split-将字符串转化为列表" class="headerlink" title="split() 将字符串转化为列表"></a>split() 将字符串转化为列表</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'kkohuang yuan yin lure'</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 默认以空格分割元素</span><span class="token punctuation">[</span><span class="token string">'kkohuang'</span><span class="token punctuation">,</span> <span class="token string">'yuan'</span><span class="token punctuation">,</span> <span class="token string">'yin'</span><span class="token punctuation">,</span> <span class="token string">'lure'</span><span class="token punctuation">]</span>t <span class="token operator">=</span> <span class="token string">'top:mid:adc'</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 指定以冒号进行分割</span><span class="token punctuation">[</span><span class="token string">'top'</span><span class="token punctuation">,</span> <span class="token string">'mid'</span><span class="token punctuation">,</span> <span class="token string">'adc'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 指定以冒号进行分割,分割一次</span><span class="token punctuation">[</span><span class="token string">'top'</span><span class="token punctuation">,</span> <span class="token string">'mid:adc'</span><span class="token punctuation">]</span>t <span class="token operator">=</span> <span class="token string">':mid:adc'</span>    <span class="token comment" spellcheck="true"># 只有两个分割符，但是转换成列表之后参数个数是n+1</span><span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">'mid'</span><span class="token punctuation">,</span> <span class="token string">'adc'</span><span class="token punctuation">]</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="join-列表转化为字符串"><a href="#join-列表转化为字符串" class="headerlink" title="join() 列表转化为字符串"></a>join() 列表转化为字符串</h2><pre class="line-numbers language-python"><code class="language-python">t <span class="token operator">=</span> <span class="token string">':mid:adc'</span>s9 <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 将每个字符通过指定的连接符连接在一起</span><span class="token keyword">print</span><span class="token punctuation">(</span>s9<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token operator">-</span>m<span class="token operator">-</span>i<span class="token operator">-</span>d<span class="token operator">-</span><span class="token punctuation">:</span><span class="token operator">-</span>a<span class="token operator">-</span>d<span class="token operator">-</span>c    t1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'liz'</span><span class="token punctuation">,</span><span class="token string">'zsd'</span><span class="token punctuation">,</span><span class="token string">'awa'</span><span class="token punctuation">]</span>s10 <span class="token operator">=</span> <span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>t1<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 以空格为分隔符</span><span class="token keyword">print</span><span class="token punctuation">(</span>s10<span class="token punctuation">)</span>liz zsd awa            <span class="token comment" spellcheck="true"># 将列表的多个元素转换回字符串</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="replace-字符串替换"><a href="#replace-字符串替换" class="headerlink" title="replace() 字符串替换"></a>replace() 字符串替换</h2><pre class="line-numbers language-python"><code class="language-python">t <span class="token operator">=</span> <span class="token string">'faker是世界第一中单，faker也是一个屌丝，faker'</span>s11 <span class="token operator">=</span> t<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'faker'</span><span class="token punctuation">,</span><span class="token string">'55开'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 可以指定替换的次数，不指定次数则全部替换</span><span class="token keyword">print</span><span class="token punctuation">(</span>s11<span class="token punctuation">)</span><span class="token number">55</span>开是世界第一中单，<span class="token number">55</span>开也是一个屌丝，faker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="format-格式化输出"><a href="#format-格式化输出" class="headerlink" title="format() 格式化输出"></a>format() 格式化输出</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 第一种</span>s <span class="token operator">=</span> <span class="token string">'我叫{}，我玩{}，我主玩的位置是{}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">'bang'</span><span class="token punctuation">,</span><span class="token string">'英雄联盟'</span><span class="token punctuation">,</span><span class="token string">'adc'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 我叫bang，我玩英雄联盟，我主玩的位置是adc</span><span class="token comment" spellcheck="true"># 第二种</span>s <span class="token operator">=</span> <span class="token string">'我叫{0}，今年{1}，性别{2}，我依然叫{0}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'20'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 我叫小明，今年20，性别女，我依然叫小明</span><span class="token comment" spellcheck="true"># 第三种</span>s <span class="token operator">=</span> <span class="token triple-quoted-string string">"""我叫{name}，今年{age}，性别{sex}，我依然叫{name}"""</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>sex<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'小明'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 我叫小明，今年20，性别女，我依然叫小明</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="is-判断字符串和数字组成"><a href="#is-判断字符串和数字组成" class="headerlink" title="is 判断字符串和数字组成"></a>is 判断字符串和数字组成</h2><pre class="line-numbers language-python"><code class="language-python">name <span class="token operator">=</span><span class="token string">'huanyuan135'</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>isalnum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 判断字符串由字母或数字组成</span><span class="token boolean">True</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 判断字符串只由字母组成</span><span class="token boolean">False</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 判断字符串只由数字组成</span><span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="count-计算字符串中某个字符出现的次数"><a href="#count-计算字符串中某个字符出现的次数" class="headerlink" title="count 计算字符串中某个字符出现的次数"></a>count 计算字符串中某个字符出现的次数</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'cdcdcdcdcdjvnjfnvjfn:jsvnsvpojwpd'</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 计算这个字符串f字符出现的次数</span><span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token number">6</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 切片，顾首不顾尾，从零开始到第八个字符的前面截断</span><span class="token number">4</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 从零开始数，第八个字符到结束</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="len-统计字符串长度"><a href="#len-统计字符串长度" class="headerlink" title="len 统计字符串长度"></a>len 统计字符串长度</h2><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'cdcdcdcdcdjvnjfnvjfn:jsvnsvpojwpd'</span><span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 内置函数</span><span class="token number">33</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;格式化输出&quot;&gt;&lt;a href=&quot;#格式化输出&quot; class=&quot;headerlink&quot; title=&quot;格式化输出&quot;&gt;&lt;/a&gt;格式化输出&lt;/h1&gt;&lt;pre class=&quot;line-numbers language-python&quot;&gt;&lt;code class=&quot;langua
      
    
    </summary>
    
    
      <category term="Python" scheme="https://www.missf.top/categories/Python/"/>
    
    
      <category term="Python基础" scheme="https://www.missf.top/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Python基础day01</title>
    <link href="https://www.missf.top/2020/04/23/Python%E5%9F%BA%E7%A1%80day01/"/>
    <id>https://www.missf.top/2020/04/23/Python%E5%9F%BA%E7%A1%80day01/</id>
    <published>2020-04-23T04:14:29.000Z</published>
    <updated>2020-04-24T13:03:27.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python发展史"><a href="#Python发展史" class="headerlink" title="Python发展史"></a>Python发展史</h1><ul><li>创始人:Guido，国人叫龟叔，在1989年的圣诞节写出来的</li><li>2005 - 2012，龟叔去了谷歌工作，谷歌大量使用Python</li><li>2005年国内第一家使用Python的公司—豆瓣</li><li>2012年国内兴起云计算的热潮，Python借助OpenStack又火了一把</li><li>2014年AI兴起，大量的公司使用Python去写算法</li><li>直到2017年Python才真正进入大众的视野</li></ul><h1 id="Python的应用领域"><a href="#Python的应用领域" class="headerlink" title="Python的应用领域"></a>Python的应用领域</h1><ul><li>WEB开发:最火的Python web框架Django，还有支持异步高并发的Tornado，短小精悍的flask</li><li>网络编程:支持高并发的Twisted网络框架</li><li>爬虫:Python在爬虫领域几乎是霸主地位，具有非常多的爬虫模块支持</li><li>云计算:著名的云计算框架OpenStack就是用Python写的</li><li>人工智能和数据分析:Python是目前人工智能和数据分析领域公认的必备语言</li><li>自动化运维:在Linux运维领域，Python能做很多事情，特别是处理数据的能力非常出色</li><li>游戏开发:Python能做游戏开发，但是使用Python开发游戏的公司可能没有这么多</li></ul><h1 id="编译型语言"><a href="#编译型语言" class="headerlink" title="编译型语言"></a>编译型语言</h1><p>核心:通过编译器将人类写出来的代码一次性全部编译成机器语言让计算机可以识别和执行</p><p>代表语言：c，c++，golang，java</p><p>优点:执行效率高</p><p>缺点:开发效率低，不可以跨平台</p><p>一般多用于研究所、研究院，对执行效率要求高，大数据的计算、底层的开发</p><h1 id="解释型语言"><a href="#解释型语言" class="headerlink" title="解释型语言"></a>解释型语言</h1><p>核心:解释器逐行解释代码，再逐行执行（python是解释器，java中叫虚拟机）</p><p>代表语言:Python，php，Java，ruby</p><p>优点:开发效率高，可以跨平台，可移植性强</p><p>缺点:执行效率相对编译型语言慢</p><h1 id="Python的优缺点"><a href="#Python的优缺点" class="headerlink" title="Python的优缺点"></a>Python的优缺点</h1><p>优点</p><ol><li>Python是一门高级语言，不用关心底层内存指针等等</li><li>由于Python开源的本质，Python已经被移植到许多平台，具备非常高的可移植性</li><li>Python可以嵌入c语言的代码，c语言也可以嵌入Python的代码，具备可嵌入性</li><li>大量现有的第三方库和模块的支持，使得开发效率大大提高</li></ol><p>缺点</p><ol><li>执行速度比编译型语言慢，如果运行Python花了0.1s，同样的代码c语言花了0.01秒，这样c就比Python快了十倍</li><li>Python源码是以明文形式存放的，如果项目要求源代码必须是加密的，一开始就不应该选择Python</li><li>线程不能利用多核CPU的问题，这也是Python被人诟病最多的一个缺点</li></ol><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>官方解释:将程序中一些中间结果暂时存到内存中，供后面程序调用</p><h2 id="变量命名规则"><a href="#变量命名规则" class="headerlink" title="变量命名规则"></a>变量命名规则</h2><ul><li>变量必须由数字，字母，下划线任意组合</li><li>不能是数字开头</li><li>不能使用Python中的关键字（具体关键字后面再介绍）</li><li>变量要具有描述性</li><li>变量不能过长</li><li>变量不能使用中文</li><li>尽量使用驼峰体</li></ul><h2 id="定义Python变量"><a href="#定义Python变量" class="headerlink" title="定义Python变量"></a>定义Python变量</h2><pre class="line-numbers language-python"><code class="language-python">age1 <span class="token operator">=</span> <span class="token number">12</span>age2 <span class="token operator">=</span> age1age3 <span class="token operator">=</span> age2age2 <span class="token operator">=</span> <span class="token number">24</span><span class="token keyword">print</span> <span class="token punctuation">(</span>age1<span class="token punctuation">,</span>age2<span class="token punctuation">,</span>age3<span class="token punctuation">)</span><span class="token number">12</span> <span class="token number">24</span> <span class="token number">12</span><span class="token comment" spellcheck="true"># 注意：程序中会大量的出现和使用变量，变量中会暂存一些少量的数据，给其他变量代指</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Python常量"><a href="#Python常量" class="headerlink" title="Python常量"></a>Python常量</h1><p>常量，用于定义不变的值。例如:身份证号，圆周率，历史记载，新中国成立时间:1949101</p><h2 id="使用常量"><a href="#使用常量" class="headerlink" title="使用常量"></a>使用常量</h2><p>Python中的常量可以改变（不像c改变常量会报错），但约定俗成Python中将变量全部变成大写，就是表示常量，将一些不想让别人改变的量设置成常量，放在文件最上面</p><h1 id="Python注释"><a href="#Python注释" class="headerlink" title="Python注释"></a>Python注释</h1><p>对某一段代码做解释说明，一般是精简的代码，别人可能看不懂，需要做简单的解释</p><h2 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#好好学习，天天向上</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token triple-quoted-string string">'''被注释的内容'''</span><span class="token triple-quoted-string string">"""被注释的内容"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="基础数据类型初识"><a href="#基础数据类型初识" class="headerlink" title="基础数据类型初识"></a>基础数据类型初识</h1><h2 id="int-整型"><a href="#int-整型" class="headerlink" title="int 整型"></a>int 整型</h2><pre class="line-numbers language-python"><code class="language-python">i1 <span class="token operator">=</span> <span class="token number">10</span>i2 <span class="token operator">=</span> <span class="token number">20</span><span class="token keyword">print</span> <span class="token punctuation">(</span>i1 <span class="token operator">*</span> i2<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 200</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="str-字符串"><a href="#str-字符串" class="headerlink" title="str 字符串"></a>str 字符串</h2><pre class="line-numbers language-python"><code class="language-python">python中凡是用引号引起来的内容就是字符串数据类型ret1 <span class="token operator">=</span> <span class="token string">'荒原饮露'</span>ret2 <span class="token operator">=</span> <span class="token string">"荒原饮露"</span>ret3 <span class="token operator">=</span> <span class="token triple-quoted-string string">"""荒原饮露"""</span>ret4 <span class="token operator">=</span> <span class="token triple-quoted-string string">'''荒原饮露'''</span><span class="token keyword">print</span> <span class="token punctuation">(</span>ret1<span class="token punctuation">,</span>ret2<span class="token punctuation">,</span>ret3<span class="token punctuation">,</span>ret4<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="bool-布尔值"><a href="#bool-布尔值" class="headerlink" title="bool 布尔值"></a>bool 布尔值</h2><pre class="line-numbers language-python"><code class="language-python">true     <span class="token comment" spellcheck="true"># 真</span>false    <span class="token comment" spellcheck="true"># 假</span>用于判断条件，逻辑语句真假<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="单双引号搭配使用"><a href="#单双引号搭配使用" class="headerlink" title="单双引号搭配使用"></a>单双引号搭配使用</h2><pre class="line-numbers language-python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">"I' m huangyuanyinlu,18 year"</span><span class="token keyword">print</span> <span class="token punctuation">(</span>msg<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># I' m huangyuanyinlu,18 year</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="字符串相加相乘"><a href="#字符串相加相乘" class="headerlink" title="字符串相加相乘"></a>字符串相加相乘</h2><pre class="line-numbers language-python"><code class="language-python">a1 <span class="token operator">=</span> <span class="token string">'Alex'</span>a2 <span class="token operator">=</span> <span class="token string">'sb'</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a1 <span class="token operator">+</span> a2<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># Alexsb</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a1 <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># AlexAlexAlexAlexAlexAlexAlexAlexAlexAlex</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="input-用户交互"><a href="#input-用户交互" class="headerlink" title="input 用户交互"></a>input 用户交互</h1><p>让用户输入用户名密码，得到用户输入的数据，起到了人与程序的交互作用</p><pre class="line-numbers language-python"><code class="language-python">name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入你的名字："</span><span class="token punctuation">)</span>age <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入你的年龄："</span><span class="token punctuation">)</span>sex <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入你的性别："</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>sex<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 这里注意一点:凡是input得到的值，都是字符串数据类型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将用户输入的变量进行拼接"><a href="#将用户输入的变量进行拼接" class="headerlink" title="将用户输入的变量进行拼接"></a>将用户输入的变量进行拼接</h2><pre class="line-numbers language-python"><code class="language-python">name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入你的名字："</span><span class="token punctuation">)</span>age <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入你的年龄："</span><span class="token punctuation">)</span>sex <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入你的性别："</span><span class="token punctuation">)</span>msg <span class="token operator">=</span> <span class="token string">'我的姓名是'</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">','</span> <span class="token operator">+</span> <span class="token string">'我的年龄是'</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">','</span> <span class="token operator">+</span> <span class="token string">'我的性别是'</span> <span class="token operator">+</span> sex <span class="token operator">+</span> <span class="token string">'.'</span><span class="token keyword">print</span> <span class="token punctuation">(</span>msg<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 我的姓名是荒原饮露,我的年龄是23,我的性别是男</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="if-流程控制语句"><a href="#if-流程控制语句" class="headerlink" title="if 流程控制语句"></a>if 流程控制语句</h1><h2 id="if-单分支"><a href="#if-单分支" class="headerlink" title="if 单分支"></a>if 单分支</h2><pre class="line-numbers language-python"><code class="language-python">age <span class="token operator">=</span> input <span class="token punctuation">(</span><span class="token string">"请输入年龄:"</span><span class="token punctuation">)</span>age <span class="token operator">=</span> int<span class="token punctuation">(</span>age<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># Python3x之后，input得到的数据都是字符串类型</span><span class="token keyword">print</span> <span class="token punctuation">(</span>age<span class="token punctuation">,</span>type<span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 输出变量的数据类型</span><span class="token keyword">if</span> age <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你已经不是10岁的小孩了'</span>）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="if-多分支"><a href="#if-多分支" class="headerlink" title="if 多分支"></a>if 多分支</h2><pre class="line-numbers language-python"><code class="language-python">jineng <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入你的技能:'</span><span class="token punctuation">)</span><span class="token keyword">if</span> jineng <span class="token operator">==</span> <span class="token string">'三分球'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'可以参加三分球大赛'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> jineng <span class="token operator">==</span> <span class="token string">'中投'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'可以参加中距离投篮'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> jineng <span class="token operator">==</span> <span class="token string">'突破'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'可以参加1V1对抗赛'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'买票进场吧'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="if-嵌套"><a href="#if-嵌套" class="headerlink" title="if 嵌套"></a>if 嵌套</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 登陆示例</span>username <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入用户名：'</span><span class="token punctuation">)</span>password <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入密码：'</span><span class="token punctuation">)</span><span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">'荒原饮露'</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> password <span class="token operator">==</span> <span class="token string">'123'</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'登录成功'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'密码错误'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户名不存在'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 买票示例</span>has_ticket <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">'请输入车票号码:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>knife_length <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">'请输入刀的长度:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> has_ticket <span class="token operator">==</span> <span class="token number">23</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'车票检查通过，准备开始安检'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> knife_length <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'刀不超过20厘米，允许上车'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'刀超过20厘米，不允许上车'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"没有车票"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h1><h2 id="单次循环"><a href="#单次循环" class="headerlink" title="单次循环"></a>单次循环</h2><pre class="line-numbers language-python"><code class="language-python">flag <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">while</span> flag<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'麦迪'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'科比'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'杜兰特'</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'詹姆斯'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># flag = False后面的依然会输出，因为运行到最后才会重新回到while</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="打印1到100"><a href="#打印1到100" class="headerlink" title="打印1到100"></a>打印1到100</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 方法一</span>count <span class="token operator">=</span> <span class="token number">1</span>flag <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">while</span> flag<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">101</span><span class="token punctuation">:</span>        flag <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment" spellcheck="true"># 方法二</span>count <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">101</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token comment" spellcheck="true"># 不要见方法二代码少就不去理解方法一，因为方法一包含flag = True的编程思想</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="计算1加到100"><a href="#计算1加到100" class="headerlink" title="计算1加到100"></a>计算1加到100</h2><pre class="line-numbers language-python"><code class="language-python">count <span class="token operator">=</span> <span class="token number">1</span>sum <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;=</span> <span class="token number">101</span><span class="token punctuation">:</span>   sum <span class="token operator">=</span> sum <span class="token operator">+</span> count   count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>   <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">101</span><span class="token punctuation">:</span>    <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># break是直接终止循环</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h1><pre class="line-numbers language-python"><code class="language-python">打印<span class="token number">1</span>到<span class="token number">10</span>，但是跳过<span class="token number">7</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token comment" spellcheck="true"># continue是跳出本次循环，继续执行下一个循环</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 判断count的值，直接+1</span>        count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="打印100以内的偶数"><a href="#打印100以内的偶数" class="headerlink" title="打印100以内的偶数"></a>打印100以内的偶数</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 利用对2取余去判断是否偶数</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">101</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> count <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span><span class="token comment" spellcheck="true"># 每次自加2去打印偶数，虽然这样的做法不专业，但是也是体现灵活编程思维的一种方式</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">101</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="while-else"><a href="#while-else" class="headerlink" title="while else"></a>while else</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># while else :只有在while循环被break打断时，才不会执行else程序，否则循环完之后一定会执行else程序</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">:</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Loop"</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"循环正常执行"</span><span class="token punctuation">)</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">:</span>    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Loop"</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"循环正常执行"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># while循环没有被打断，打印完Loop1-6之后还是会打印循环正常执行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python发展史&quot;&gt;&lt;a href=&quot;#Python发展史&quot; class=&quot;headerlink&quot; title=&quot;Python发展史&quot;&gt;&lt;/a&gt;Python发展史&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;创始人:Guido，国人叫龟叔，在1989年的圣诞节写出来的&lt;/li&gt;

      
    
    </summary>
    
    
      <category term="Python" scheme="https://www.missf.top/categories/Python/"/>
    
    
      <category term="Python基础" scheme="https://www.missf.top/tags/Python%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.missf.top/2020/04/21/Hello-World/"/>
    <id>https://www.missf.top/2020/04/21/Hello-World/</id>
    <published>2020-04-21T04:14:29.000Z</published>
    <updated>2020-04-22T16:00:12.549Z</updated>
    
    <content type="html"><![CDATA[<p>所有无法深入问题本质的那些人，最终都将离开这个行业。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;所有无法深入问题本质的那些人，最终都将离开这个行业。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Hello-World" scheme="https://www.missf.top/categories/Hello-World/"/>
    
    
      <category term="Hello-World" scheme="https://www.missf.top/tags/Hello-World/"/>
    
  </entry>
  
</feed>
